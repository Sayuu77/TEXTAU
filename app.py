import streamlit as st
import os
import time
import glob
from gtts import gTTS
from PIL import Image
import base64
import io
import random

# -------------------- CONFIG --------------------
st.set_page_config(page_title="Texto ‚Üí Audio ‚Ä¢ Aesthetic", page_icon="üéß", layout="centered")

# -------------------- CSS & BACKGROUND --------------------
# Usa images/clouds.png si existe; si no, cae en un gradiente lila‚Äìceleste
clouds_path = "images/clouds.png"
bg_css = ""
if os.path.exists(clouds_path):
    # usa la imagen clouds como fondo (cover)
    bg_css = f"""
    <style>
      body {{
        background-image: url('{clouds_path}');
        background-size: cover;
        background-attachment: fixed;
      }}
      .stApp > .main {{ background-color: rgba(255,255,255,0.6); border-radius: 14px; padding: 18px; }}
    </style>
    """
else:
    bg_css = """
    <style>
      body { background: linear-gradient(180deg, #F5E9FF, #E8F8FF); }
      .stApp > .main { background-color: rgba(255,255,255,0.7); border-radius: 14px; padding: 18px; }
    </style>
    """

st.markdown(bg_css, unsafe_allow_html=True)

# -------------------- HEADER / IMAGEN --------------------
st.title("üéß Conversi√≥n de Texto a Audio ‚Äî Soft Aesthetic")
# mostrar la imagen del gato/rat√≥n si existe
if os.path.exists("gato_raton.png"):
    img = Image.open("gato_raton.png")
    st.image(img, width=320)
else:
    st.markdown("*(Coloca `gato_raton.png` en la carpeta del proyecto para ver la imagen)*")

# -------------------- SIDEBAR --------------------
with st.sidebar:
    st.header("Instrucciones")
    st.write("""
    1. Pega o escribe texto en el √°rea principal.  
    2. Selecciona idioma.  
    3. Presiona **Convertir a Audio**.  
    4. Descarga el MP3 si lo deseas.  
    """)
    st.markdown("---")
    st.write("Si quieres m√∫sica de fondo coloca `musica.mp3` en la carpeta del proyecto.")

# -------------------- REEMPLAZO: CUENTO JUDE & CARDAN --------------------
st.subheader("üìñ Una historia corta ‚Äî Jude & Cardan")

cuento_jude_cardan = (
    "El patio del palacio estaba fr√≠o, pero las flores encantadas proyectaban un brillo "
    "que parec√≠a burlarse de la noche. Jude camin√≥ sin ceremonias, la armadura de quien "
    "aprendi√≥ a no pedir nada. Cardan apareci√≥ en el borde de la fuente, con la sonrisa "
    "que tanto la irritaba y, en ocasiones, la dejaba sin aliento.\n\n"
    "‚ÄîNunca eres sencilla, ¬øsabes? ‚Äîdijo √©l con voz baja‚Äî. Insistes en convertir todo en combate.\n\n"
    "Jude clav√≥ la mirada. ‚ÄîY t√∫ insistes en hacer del mundo una broma hilarante. ¬øQu√© quieres ahora?\n\n"
    "Cardan se acerc√≥, las manos en los bolsillos, inc√≥modo y exacto a la vez.\n\n"
    "‚ÄîQuiero que dejes de mirarme como si fuera un rival. Me cansas, Jude. Me haces sentir demasiado.\n\n"
    "Ella casi ri√≥. El borde de la risa se vio y lo rechaz√≥ por mil motivos pr√°cticos: orgullo, estrategia.\n\n"
    "‚Äî¬øSentir demasiado? Qu√© original. ¬øVas a llorar ahora, pr√≠ncipe?\n\n"
    "Por primera vez en muchas noches, √©l no devolvi√≥ el insulto. En vez de eso, tom√≥ su mano con una "
    "manera torpe que parec√≠a importarle m√°s que su orgullo.\n\n"
    "‚ÄîNo s√© qu√© har√°s conmigo ‚Äîmurmur√≥‚Äî. No s√© si ser√°s fuego o refugio. Solo s√© que no quiero que te vayas.\n\n"
    "Jude apret√≥ los dedos, no por debilidad, sino para recordar que a√∫n pod√≠a decidir. Sus labios se curvaron "
    "en algo que no era sonrisa, pero casi.\n\n"
    "‚ÄîEntonces no me falles ‚Äîdijo‚Äî. No porque te importe el coraz√≥n que tienes, sino porque no lo soportar√© si me traicionas.\n\n"
    "Cardan la mir√≥ largo, y el silencio del jard√≠n llen√≥ lo que las palabras no dijeron. All√≠, entre orgullo y ternura, "
    "se quedaron, juntos por una decisi√≥n que ninguno nombrar√≠a todav√≠a."
)

st.write(cuento_jude_cardan)

# -------------------- M√öSICA DE FONDO (LOOP) --------------------
# Si existe musica.mp3, intentamos reproducirla en loop. Nota: algunos navegadores bloquean autoplay.
if os.path.exists("musica.mp3"):
    try:
        with open("musica.mp3", "rb") as mf:
            music_bytes = mf.read()
        # mostramos un control para que el usuario lo pause si quiere
        st.audio(music_bytes, format="audio/mp3", start_time=0)
        # Intento extra: insertar un elemento <audio> con autoplay & loop (puede ser bloqueado por el navegador)
        audio_html = """
        <audio autoplay loop>
          <source src="musica.mp3" type="audio/mpeg">
          Your browser does not support the audio element.
        </audio>
        """
        st.markdown(audio_html, unsafe_allow_html=True)
        st.info("M√∫sica de fondo activada (loop). Si no suena autom√°ticamente, presiona el bot√≥n de reproducir.")
    except Exception as e:
        st.warning("No se pudo cargar musica.mp3 autom√°ticamente. Aseg√∫rate de que el archivo exista y sea MP3.")
else:
    st.info("Coloca `musica.mp3` en la carpeta del proyecto para activar la m√∫sica de fondo en loop.")

# -------------------- √ÅREA DE TEXTO A CONVERTIR --------------------
st.markdown("---")
st.markdown("### ‚úèÔ∏è Escribe o pega el texto que quieres escuchar")
text = st.text_area("Texto a convertir", height=180)

option_lang = st.selectbox("Selecciona el idioma", ("Espa√±ol", "English"))
lg = 'es' if option_lang == "Espa√±ol" else 'en'

# -------------------- FUNCIONES TTS Y DESCARGA --------------------
try:
    os.makedirs("temp", exist_ok=True)
except Exception:
    pass

def text_to_speech(text, lg):
    if not text or not text.strip():
        return None, "No hay texto"
    try:
        tts = gTTS(text, lang=lg)
        safe_name = "".join(c for c in text[:20] if c.isalnum() or c in (" ", "_")).strip().replace(" ", "_")
        filename = f"{safe_name or 'audio'}.mp3"
        path = os.path.join("temp", filename)
        tts.save(path)
        return path, text
    except Exception as e:
        return None, str(e)

def get_download_link(file_path, label="Descargar audio"):
    with open(file_path, "rb") as f:
        data = f.read()
    b64 = base64.b64encode(data).decode()
    href = f'<a href="data:audio/mp3;base64,{b64}" download="{os.path.basename(file_path)}">{label}</a>'
    return href

# -------------------- BOT√ìN CONVERSI√ìN --------------------
if st.button("‚ú® Convertir a Audio"):
    if not text.strip():
        st.warning("Por favor escribe o pega el texto que quieres convertir.")
    else:
        path, out = text_to_speech(text, lg)
        if path:
            st.success("Audio generado ‚úÖ")
            # reproducir en la app
            with open(path, "rb") as f:
                st.audio(f.read(), format="audio/mp3")
            # mostrar enlace de descarga
            st.markdown(get_download_link(path, label="üì• Descargar audio generado"), unsafe_allow_html=True)
        else:
            st.error(f"Error al generar audio: {out}")

# -------------------- LIMPIEZA DE ARCHIVOS ANTIGUOS --------------------
def cleanup_temp(days=7):
    files = glob.glob("temp/*.mp3")
    now = time.time()
    cutoff = now - days * 86400
    for f in files:
        try:
            if os.path.getmtime(f) < cutoff:
                os.remove(f)
        except Exception:
            pass

cleanup_temp(7)

# -------------------- FOOTER --------------------
st.markdown("---")
footer_options = [
    "Un d√≠a a la vez ü§ç",
    "No te sueltes.",
    "Tambi√©n mereces cosas bonitas."
]
st.caption(random.choice(footer_options))

# -------------------- RECUERDOS / AYUDA --------------------
st.info("Si necesitas que te mande un enlace para descargar m√∫sica libre de derechos (suave, lo-fi / instrumental), dime y te lo comparto.")
