import streamlit as st
import os
import time
import glob
import base64
import io
import random
from gtts import gTTS
from PIL import Image
import requests

# -------------------- CONFIG --------------------
st.set_page_config(page_title="Cuentos ‚Üí Audio ‚Ä¢ Lofi Dreamy", page_icon="üåô", layout="centered")

# -------------------- ESTILO Lofi Dreamy (neo-glass) --------------------
st.markdown("""
    <style>
    :root{
      --accent1: #9B84FF; /* lila */
      --accent2: #90E0FF; /* celeste */
      --glass-bg: rgba(255,255,255,0.04);
      --text-soft: #F3F2FF;
    }
    body {
      background: linear-gradient(180deg, #0B0820 0%, #1B1130 50%, #0F1724 100%);
      color: var(--text-soft);
      font-family: "Inter", "Segoe UI", Roboto, Arial, sans-serif;
    }
    .stApp > .main {
      background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
      backdrop-filter: blur(6px);
      -webkit-backdrop-filter: blur(6px);
      border: 1px solid rgba(255,255,255,0.03);
      box-shadow: 0 8px 30px rgba(2,6,23,0.7);
      border-radius: 16px;
      padding: 26px;
    }
    /* Hero banner */
    .hero-title {
      font-size: 34px;
      font-weight: 700;
      margin: 8px 0 2px 0;
      color: white;
      letter-spacing: 0.2px;
    }
    .hero-sub {
      color: #DAD6FF;
      margin: 0 0 12px 0;
    }

    /* Buttons */
    .stButton>button, .glass-btn {
      background: linear-gradient(90deg, var(--accent2), var(--accent1));
      color: white;
      border: none;
      padding: 10px 16px;
      border-radius: 12px;
      font-weight: 600;
      cursor: pointer;
      box-shadow: 0 6px 18px rgba(139,115,255,0.12);
    }
    .stButton>button:hover {
      filter: brightness(1.06);
      transform: translateY(-1px);
    }

    /* Cards / textareas */
    .card {
      background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
      border: 1px solid rgba(255,255,255,0.03);
      padding: 14px;
      border-radius: 12px;
      box-shadow: 0 6px 20px rgba(2,6,23,0.6);
    }
    textarea { background: rgba(255,255,255,0.02); color: #F6F6FF; }
    .small-note { color: #CFCFF6; font-size: 13px; margin-top:6px; }
    .muted { color: #BDB9E8; font-size:13px; }
    </style>
""", unsafe_allow_html=True)

# -------------------- HERO BANNER (portada grande) --------------------
# If portada.png exists in folder, use it. Otherwise use an online fallback image.
hero_image_path = "portada.png"
fallback_url = "https://images.unsplash.com/photo-1503264116251-35a269479413?auto=format&fit=crop&w=1350&q=80"

st.markdown("<div style='display:flex; gap:18px; align-items:center'>", unsafe_allow_html=True)
if os.path.exists(hero_image_path):
    try:
        img = Image.open(hero_image_path)
        st.image(img, use_column_width=True)
    except Exception:
        # if failed to load local, try remote
        st.image(fallback_url, use_container_width=True)
else:
    # load remote hero image
    st.image(fallback_url, use_column_width=True)
st.markdown("</div>", unsafe_allow_html=True)

st.markdown("<div style='text-align:center'>", unsafe_allow_html=True)
st.markdown("<div class='hero-title'>üåô Cuentos & Audio ‚Äî Lofi Dreamy</div>", unsafe_allow_html=True)
st.markdown("<div class='hero-sub'>Historias en espa√±ol ‚Äî inmersivas, sutiles y en tono de realismo m√°gico</div>", unsafe_allow_html=True)
st.markdown("</div>", unsafe_allow_html=True)

st.markdown("---")

# -------------------- CUENTOS (medianos, realismo m√°gico + fantas√≠a suave) --------------------
STORIES = [
    """La noche hab√≠a te√±ido la laguna de un azul que parec√≠a guardar secretos. Marta lleg√≥ con una carta sin remitente y la dej√≥ sobre la piedra m√°s alta. Al abrirla descubri√≥ una palabra: regreso. La palabra no era una instrucci√≥n; era una puerta. Cuando la pronunci√≥, las linternas del pueblo encendieron una fila de luces en el agua y un barquero de sombra la condujo hacia una isla que no aparec√≠a en los mapas. All√≠ encontr√≥ objetos con nombres olvidados: una taza que susurraba palabras de infancia, un reloj que corr√≠a hacia atr√°s para recuperar instantes. Marta comprendi√≥ que el lugar no borraba el pasado, lo pon√≠a en orden como quien acomoda los libros de una biblioteca para que vuelvan a leerse con ternura.""",
    """En la plaza central, los relojes marcaban horas distintas seg√∫n el lado por donde uno entrara. Bruno, aburrido de la rutina, decidi√≥ cruzar la plaza cada d√≠a por una puerta diferente. Un martes hall√≥ una puerta peque√±a y circular, apenas perceptible, que lo condujo a una estaci√≥n donde el tren esperaba silencioso. Solo sub√≠an viajeros que buscaban un recuerdo espec√≠fico: la sonrisa de una madre, la voz de un abuelo, el sabor de una merienda. Bruno pidi√≥ su recuerdo y, al mirarlo, descubri√≥ que aquello que hab√≠a perdido no era solo una cosa, sino la manera en que lo miraba. Al bajar del tren, volvi√≥ al pueblo un poco m√°s paciente con su propia memoria.""",
    """Una librer√≠a se escond√≠a entre fachadas iguales; su due√±o, sin edad, iba colocando palabras que nadie ped√≠a. Marta entr√≥ una tarde de lluvia porque su paraguas le pidi√≥ refugio. All√≠ encontr√≥ una novela que describ√≠a exactamente la escena que viv√≠a en ese instante: la humedad en el cristal, la mirada de un hombre leyendo al fondo, su propia duda. La novela no era espejo, era promesa: quien la leyera con atenci√≥n hallar√≠a una p√°gina extra, un relato peque√±o que hablaba de decisiones a√∫n no tomadas. Marta escribi√≥ su nombre en esa p√°gina y la tinta, por un instante, se transform√≥ en una escalera hacia una ventana que ella no sab√≠a que necesitaba abrir.""",
    """Un faro que ya no guiaba barcos segu√≠a encendido por costumbre. Cada noche, su luz dibujaba un camino que nadie segu√≠a hasta que Lucas, cansado de ciudades sin memoria, subi√≥ los pelda√±os. En la cima hall√≥ cartas atadas con cordeles: palabras dirigidas a futuros lectores que a√∫n no exist√≠an. Tom√≥ una, la ley√≥ y sinti√≥ que le√≠an en voz baja aquello que su propia vida callaba. Escribi√≥ otra, puso su firma y la at√≥. Tiempo despu√©s recibi√≥ una carta desde un lugar que no conoc√≠a: quien la firmaba dec√≠a haber recibido la suya y agradec√≠a por haber escrito algo que lo hab√≠a salvado de una noche sin estrellas.""",
    """En un barrio donde las casas cambiaban de paredes cada primavera, Luc√≠a encontr√≥ una puerta que cruj√≠a en otra lengua. Tras atravesarla apareci√≥ un jard√≠n donde crec√≠an frases como flores: poemas, silencios, promesas. Para regarlas no usaba agua sino recuerdos. Luc√≠a dej√≥ caer en la tierra una memoria de su infancia, una tarde de juegos y risas olvidadas, y al crecer la planta le entreg√≥ un recuerdo que nunca supo que necesitaba: la certeza de que algunas p√©rdidas se convierten en compa√±√≠a si se les permite echar ra√≠ces.""",
    """Hab√≠a un caf√© en la esquina donde los clientes solo ped√≠an cosas peque√±as: un gesto, una disculpa, una canci√≥n. El due√±o no cobraba sino que guardaba las palabras en frascos. Una tarde entr√≥ Elena y se√±al√≥ un frasco sin etiqueta. Al abrirlo, una melod√≠a sali√≥ y llen√≥ el lugar de nombres propios. Elena entendi√≥ que el frasco guardaba lo que uno hab√≠a sido y decidi√≥ llevarse un poco. Desde entonces volvi√≥ a hablar con quienes evitaba y not√≥ que el mundo ten√≠a m√°s huecos para llenar que para temer."""
]

# -------------------- UTILIDADES TTS --------------------
def ensure_temp():
    os.makedirs("temp", exist_ok=True)

def text_to_mp3_bytes(text, lang='es'):
    ensure_temp()
    safe = "".join(c for c in text[:30] if c.isalnum() or c in (" ", "_")).strip().replace(" ", "_")
    if not safe:
        safe = "audio"
    filename = f"{safe}_{int(time.time())}.mp3"
    path = os.path.join("temp", filename)
    # gTTS puede fallar si el texto es muy largo; dividimos si es necesario en chunks razonables
    # Para la mayor√≠a de historias medianas esto funciona directo.
    tts = gTTS(text, lang=lang)
    tts.save(path)
    with open(path, "rb") as f:
        data = f.read()
    return path, data

def download_link_bytes(bytes_data, filename="audio.mp3", label="üì• Descargar audio"):
    b64 = base64.b64encode(bytes_data).decode()
    href = f'<a href="data:audio/mp3;base64,{b64}" download="{filename}">{label}</a>'
    return href

# -------------------- UI: Obtener cuento --------------------
st.markdown("## üìö Cuento aleatorio")
st.write("Pulsa **Obtener cuento** y aparecer√° una historia completa (mediana, lista para leer).")

if st.button("üì• Obtener cuento"):
    story = random.choice(STORIES)
    st.session_state['current_story'] = story
    st.markdown("<div class='card'>", unsafe_allow_html=True)
    st.markdown("### ‚ú® Tu cuento")
    st.write(story)
    st.markdown("</div>", unsafe_allow_html=True)

st.markdown("---")

# -------------------- CONVERTIR EL CUENTO A AUDIO --------------------
st.markdown("## üîä Convertir el cuento a audio")
st.write("Convierte el cuento obtenido o convi√©rtelo en otro idioma con la opci√≥n de idioma.")

if st.button("üîÅ Convertir cuento a audio"):
    if 'current_story' not in st.session_state:
        st.warning("Primero pulsa 'Obtener cuento'.")
    else:
        try:
            # elegir idioma solo para TTS (interface sigue en espa√±ol)
            lang_choice = st.selectbox("Idioma para el audio del cuento:", ("Espa√±ol", "English"), key="lang_story_convert")
            lg = 'es' if lang_choice == "Espa√±ol" else 'en'
            path, data = text_to_mp3_bytes(st.session_state['current_story'], lang=lg)
            st.success("Audio del cuento generado ‚úÖ")
            st.audio(data, format="audio/mp3")
            st.markdown(download_link_bytes(data, filename=os.path.basename(path), label="üì• Descargar audio del cuento"), unsafe_allow_html=True)
            # borrar el cuento actual para no recordarlo despu√©s
            del st.session_state['current_story']
        except Exception as e:
            st.error(f"Error al generar audio: {e}")

st.markdown("---")

# -------------------- CONVERTIR TEXTO PROPIO --------------------
st.markdown("## ‚úçÔ∏è Pega tu propio texto (en espa√±ol)")
user_text = st.text_area("Pega tu texto o cuento aqu√≠:", height=220)
lang_choice2 = st.selectbox("Idioma para el audio (tu texto):", ("Espa√±ol", "English"), key="lang_text_convert")
if st.button("üîä Convertir tu texto a audio"):
    if not user_text.strip():
        st.warning("Por favor pega o escribe alg√∫n texto.")
    else:
        try:
            lg2 = 'es' if lang_choice2 == "Espa√±ol" else 'en'
            path2, data2 = text_to_mp3_bytes(user_text, lang=lg2)
            st.success("Audio generado ‚úÖ")
            st.audio(data2, format="audio/mp3")
            st.markdown(download_link_bytes(data2, filename=os.path.basename(path2), label="üì• Descargar tu audio"), unsafe_allow_html=True)
        except Exception as e:
            st.error(f"Error al generar audio: {e}")

st.markdown("---")

# -------------------- LIMPIEZA TEMP --------------------
def cleanup_temp(days=7):
    files = glob.glob("temp/*.mp3")
    now = time.time()
    cutoff = now - days * 86400
    for f in files:
        try:
            if os.path.getmtime(f) < cutoff:
                os.remove(f)
        except Exception:
            pass

cleanup_temp(7)
